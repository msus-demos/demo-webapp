trigger:
  batch: true
  branches:
    include:
    - master
    - multi_stage_deploy
  paths:
    include:
    - terraform/*
    - src/demo-ruby-webapp/*
    - azure-pipelines.ruby.yml

pr:
  autoCancel: true
 
variables:
  sandboxAzureSubscription: 'MTC Denver Sandbox (b0e04a4a-a321-4b66-b8fd-13715262ba3c)'
  productionAzureSubscription: 'MTC Denver Production (72f988bf-86f1-41af-91ab-2d7cd011db47)'
  sandboxWebAppName: 'mtcden-demo-webapp-ruby-sandbox-app'
  productionWebAppName: 'mtcden-demo-webapp-ruby-production-app'
  acrName: mtcdensandboxdemo
  dockerNamespace: $(acrName).azurecr.io
  dockerImageName: msus-demos/demo-ruby-webapp
  storageAccountName: 

# Build and Test
stages:
- stage: Build
  jobs:
  - template: src/demo-ruby-webapp/azure-pipelines.yml
    parameters:
      azureSubscription: $(sandboxAzureSubscription)
      acrName: $(acrName)
      dockerFullyQualifiedImageName: $(dockerNamespace)/$(dockerImageName)
      dockerTag: $(Build.BuildNumber)

# Staging Release
- stage: Staging
  jobs:
  - job: Deploy
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy Web App
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: $(sandboxAzureSubscription)
        appType: 'webAppContainer'
        WebAppName: $(sandboxWebAppName)
        DockerNamespace: $(dockerNamespace)
        DockerRepository: $(dockerImageName)
        DockerImageTag: $(Build.BuildNumber)

# Production Release
- stage: Production
  jobs:
  - job: Deploy
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy Web App
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: $(productionAzureSubscription)
        appType: 'webAppContainer'
        WebAppName: $(productionWebAppName)
        DockerNamespace: $(dockerNamespace)
        DockerRepository: $(dockerImageName)
        DockerImageTag: $(Build.BuildNumber)